{"version":3,"sources":["webpack:///webpack/bootstrap 5586792946b902ef8c41","webpack:///./lib/util.js","webpack:///./lib/game.js","webpack:///./lib/game_view.js","webpack:///./lib/board.js","webpack:///./lib/break-hero.js","webpack:///./lib/breaker.js","webpack:///./lib/life_bar.js","webpack:///./lib/monster.js","webpack:///./lib/pointer.js","webpack:///./lib/gold_handler.js","webpack:///./lib/boss.js","webpack:///./lib/moving_obj.js","webpack:///./lib/leader.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;AChEA;AACA;AACA;AACA;AACA,CAAC;AAAA;AAAA;;AAED;AACA;;AAEA;AACA,iBAAiB,OAAO;AACxB;AACA;;AAEA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AAAA;AAAA;;;;;;;;;;;;;;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,iDAAiD,qBAAqB;AACtE;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,uCAAuC,iBAAiB;AACxD;AACA;;AAEA;AACA;AACA;AACA,2CAA2C,YAAY;AACvD,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,uCAAuC,+BAA+B;AACtE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;AC3NA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACvBA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA,uCAAuC,WAAW;AAClD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP,sCAAsC,QAAQ;AAC9C;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;;AAEA;;;;;;;;;;;ACzHA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,CAAC;;;;;;;;;ACdD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB,cAAc,KAAK,aAAa;AACpD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;AC9CA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oDAAoD,SAAS;AAC7D;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;AC7IA;AACmB;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;;ACtGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,qCAAqC,UAAU;AAC/C;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;ACrCA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;;;ACxDA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 5586792946b902ef8c41","export const defaults = ({\n  side: 80,\n  breakerSide: 80 / 2.7,\n  speed: 4,\n});\n\nexport const randomColor = () => {\n  const hexDigits = '0123456789ABCDEF';\n\n  let color = \"#\";\n  for (let i = 0; i < 3; i++) {\n    color += hexDigits[Math.floor(Math.random() * 16)];\n  }\n\n  return color;\n};\n\nexport const inBounds = (range, val) => {\n  return (range[0] < val && range[1] > val);\n};\n\nexport const keyBinds = (game) => {\n  return (e) => {\n      e.preventDefault();\n      game.runTurn();\n      unBindKeyHandlers(game);\n  };\n};\n\nexport const angleBind = (game) => {\n  return (e) => {\n    game.pointer.setAngle([e.offsetX, e.offsetY]);\n  };\n};\n\nexport const bindKeyHandlers = (game) => {\n  $('#canvas').on('mousedown', keyBinds(game));\n  $('#canvas').on('mousemove', angleBind(game));\n};\n\nexport const unBindKeyHandlers = (game) => {\n  $('#canvas').off('mousedown');\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/util.js\n// module id = 0\n// module chunks = 0","import Breaker from './breaker.js';\nimport Board from './board.js';\nimport LifeBar from './life_bar.js';\nimport Pointer from './pointer.js';\nimport GoldHandler from './gold_handler.js';\nimport Leader from './leader.js';\nimport * as Util from './util.js';\n\nclass Game {\n  constructor() {\n    this.breakers = [];\n    this.currentAttackers = [];\n    this.board = new Board(this);\n    this.startPos = Game.RESTPOS;\n    this.DIM_X = 480;\n    this.DIM_Y = 700;\n    this.lifeBar = new LifeBar();\n    this.pointer = new Pointer(this.board);\n    this.goldHandler = new GoldHandler();\n    this.turnInProgress = 0;\n    this.initialSetup();\n  }\n\n  initialSetup() {\n    this.background = new Image();\n    this.background.src = 'assets/bg.png';\n    this.buyBreaker = this.buyBreaker.bind(this);\n    this.upgrade = this.upgrade.bind(this);\n    this.addBreaker();\n    this.addBreaker();\n    this.addBreaker();\n    this.board.addRow(1);\n    this.board.addRow(1);\n    this.board.addRow(1);\n    this.bindButtons();\n  }\n\n  bindButtons() {\n    $('.buy-breaker-button').on('click', this.buyBreaker);\n    $('.buy-upgrade-button').on('click', this.upgrade);\n  }\n\n  addBreaker() {\n    const breaker = new Breaker({\n      att: 40,\n      pos: this.startPos,\n      color: '#cb1414',\n      side: Util.defaults.breakerSide,\n      skill: [],\n      game: this,\n    });\n\n    this.breakers.push(breaker);\n    $('.breaker-counter').text(`Breaker count: ${this.breakers.length}`);\n  }\n\n  addGold(goldEarned) {\n    this.goldHandler.addGold(goldEarned);\n  }\n\n  buyBreaker() {\n    if(this.goldHandler.buy(Game.BREAKERCOST)) {\n      this.addBreaker();\n      Game.BREAKERCOST += 1000;\n      $('.cost-upgrade').text(`Cost: ${Game.BREAKERCOST}`);\n    }\n  }\n\n  upgradeDamage() {\n    this.breakers.forEach((breaker) => {\n      breaker.upgrade(15);\n      $('.breaker-attack').text(`Attack: ${breaker.att}`);\n    });\n  }\n\n  upgrade() {\n    let cost = this.breakers[0].upgradeCost();\n    if(this.goldHandler.buy(cost)){\n      this.upgradeDamage();\n      $('.cost-breaker').text(`Cost: ${this.breakers[0].upgradeCost()}`);\n    }\n  }\n\n  allObjects() {\n    let leaders = [];\n    if(!this.turnInProgress) {\n      leaders = this.pointer.leaders;\n    }\n    return [].concat(this.board.allMonsters(), this.currentAttackers, this.lifeBar, this.pointer, leaders);\n  }\n\n  draw(ctx) {\n    ctx.clearRect(0, 0, this.DIM_X, this.DIM_Y);\n    ctx.globalAlpha = 0.5;\n    ctx.drawImage(this.background, 0, 0, this.DIM_Y, this.DIM_Y);\n    ctx.globalAlpha = 1;\n    this.allObjects().forEach((obj) => {\n      obj.draw(ctx);\n    });\n  }\n\n  moveObjects(delta) {\n    let count = 0;\n    this.currentAttackers.forEach( breaker => {\n      breaker.move(delta);\n    });\n  }\n\n  step(delta) {\n    this.moveObjects(delta);\n    this.checkCollisions();\n  }\n\n  checkCollisions() {\n    this.currentAttackers.forEach(breaker => {\n      let hitBot = false;\n      let hitTop = false;\n      let hitRight = false;\n      let hitLeft = false;\n\n      this.board.allMonsters().forEach(mons => {\n          if((breaker.vel[1] < 0) && mons.collidedBottom(breaker)) {\n            hitBot = true;\n            mons.takeHit(breaker.att);\n          }\n\n          if((breaker.vel[1] > 0) && mons.collidedTop(breaker)) {\n            hitTop = true;\n            mons.takeHit(breaker.att);\n          }\n\n          if((breaker.vel[0] < 0 && mons.collidedRight(breaker))) {\n            hitRight = true;\n            mons.takeHit(breaker.att);\n          }\n\n          if((breaker.vel[0] > 0 && mons.collidedLeft(breaker))) {\n            hitLeft = true;\n            mons.takeHit(breaker.att);\n          }\n      });\n\n      //collision canvas\n      if(breaker.pos[0] + 3 < 0) {\n        hitLeft = true;\n      }\n\n      if(breaker.pos[0] > this.DIM_X - Util.defaults.breakerSide - 3) {\n        hitRight = true;\n      }\n\n      if(breaker.pos[1] + 3 < 0) {\n        hitTop = true;\n      }\n\n      breaker.updateVel(hitBot, hitTop, hitRight, hitLeft);\n      hitBot = hitTop = hitRight = hitLeft = false;\n      this.board.updateMons(this.gold);\n    });\n  }\n\n  attackOver(pos) {\n    return pos[1] > 700;\n  }\n\n  runTurn() {\n    this.turnInProgress = 1;\n    Object.assign(this.currentAttackers, this.breakers);\n    let vel = this.pointer.calculateDir();\n    let startPos = this.pointer.position();\n    startPos[0] -= 5;\n    let interval = 0;\n    this.currentAttackers.forEach(breaker => {\n      setTimeout(() => {\n        breaker.assignDir(Object.assign([], vel));\n        breaker.assignPos(Object.assign([], startPos));\n      }, interval);\n      interval += 200;\n    });\n  }\n\n  takeDamage(row) {\n    row.forEach(mons => {\n      this.lifeBar.loseLife(mons.currHp / 10);\n    });\n  }\n\n  turnOver() {\n    this.turnInProgress = 0;\n    this.board.addRow();\n    this.board.takeDamage();\n    Util.bindKeyHandlers(this);\n    this.resetBreakers();\n    this.pointer.reset();\n    this.pointer.randomPos();\n  }\n\n  resetBreakers() {\n    this.breakers.forEach(breaker => {\n      breaker.assignPos(Game.RESTPOS);\n      breaker.assignDir(Game.RESTVEL);\n    });\n  }\n\n  remove(object) {\n    if(object instanceof Breaker) {\n      this.currentAttackers.splice(this.currentAttackers.indexOf(object), 1);\n    }\n\n    if(this.currentAttackers.length === 0) {\n      this.turnOver();\n    }\n  }\n}\n\nGame.RESTPOS = [-100, -100];\nGame.RESTVEL = [0, 0];\nGame.BREAKERCOST = 1000;\n\nexport default Game;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/game.js\n// module id = 1\n// module chunks = 0","import * as Util from './util.js';\n\nclass GameView {\n  constructor(game, ctx) {\n    this.ctx = ctx;\n    this.game = game;\n  }\n\n  start() {\n    Util.bindKeyHandlers(this.game);\n    this.lastTime = 0;\n    requestAnimationFrame(this.animate.bind(this));\n  }\n\n  animate(time) {\n    const timeDelta = time - this.lastTime;\n    this.game.step(timeDelta);\n    this.game.draw(this.ctx);\n    this.lastTime = time;\n    requestAnimationFrame(this.animate.bind(this));\n  }\n}\n\nexport default GameView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/game_view.js\n// module id = 2\n// module chunks = 0","import Monster from './monster.js';\nimport Boss from './boss.js';\nimport * as Util from './util.js';\n\nclass Board {\n  constructor(game) {\n    this.monsterRows = [];\n    this.level = 0;\n    this.game = game;\n    this.max_monster_count = 6;\n  }\n\n  moveDown() {\n    this.monsterRows.forEach( (row) => {\n      row.forEach( (monster) => monster.moveDown());\n    });\n  }\n\n  takeDamage() {\n    let toRemove;\n    this.monsterRows.forEach((row, idx) => {\n      row.forEach((monster) => {\n        if(monster.pos[1] >= 560) {\n          toRemove = idx;\n        }\n      });\n    });\n\n    if(toRemove) {\n      this.game.takeDamage(this.monsterRows[toRemove]);\n      this.monsterRows.splice(toRemove, 1);\n    }\n  }\n\n  assignMultiplier() {\n    return Math.random() > 0.95 ? 1 : 100;\n  }\n\n  updateLevel(lvl) {\n    if(lvl) {\n      this.level = 1;\n    } else {\n      this.level += 1;\n    }\n\n    $('.level-counter').text(`Level: ${this.level} / 15`);\n  }\n\n  addRow(lvl) {\n    let pos = [0, 0];\n    const newRow = [];\n    this.moveDown();\n    if(this.level < 17 || this.level > 18) {\n      this.monsterRows.push(this.spawn(this.max_monster_count, pos, newRow));\n    } else if(this.level === 18) {\n      this.monsterRows.push([new Boss(100 + this.level * 10)]);\n    }\n    this.updateLevel(lvl);\n  }\n\n  spawn(num, pos, newRow, any = false) {\n    let multiplier = this.assignMultiplier() || 2;\n    let special = 0;\n\n    if(num > 0) {\n      if(Math.random() > .6) {\n        newRow.push( new Monster(\n          (100 + this.level * 10),\n          Object.assign([],pos),\n          special)\n        );\n\n        any = true;\n      }\n\n      pos[0] += Util.defaults.side;\n      return this.spawn((num - 1), pos, newRow, any);\n    }\n\n    if(num === 1 && any === false) {\n      newRow.push( new Monster(\n        (100 + this.level * multiplier),\n        Object.assign([],pos),\n        special)\n      );\n    }\n\n    return newRow;\n  }\n\n  allMonsters() {\n    let allSters = [];\n    this.monsterRows.forEach((row) => {\n      allSters = allSters.concat(row);\n    });\n\n    return allSters;\n  }\n\n  updateMons() {\n    this.monsterRows.forEach((row) => {\n      let toRemove = [];\n      row.forEach((mons, idx) => {\n        if(mons.currHp <= 0) {\n          this.game.addGold(mons.totalHp);\n          toRemove.push(idx);\n        }\n      });\n\n      for(let i = toRemove.length - 1; i >= 0; i--){\n        if(toRemove[i] >= 0) {\n          row.splice(toRemove[i], 1);\n        }\n      }\n    });\n  }\n\n}\n\nconst MAX_MONSTER_COUNT = 6;\n\nexport default Board;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/board.js\n// module id = 3\n// module chunks = 0","import Game from './game.js';\nimport GameView from './game_view.js';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const canvasEl = document.getElementById('canvas');\n  const ctx = canvasEl.getContext('2d');\n\n  $('.close').click((e) => {\n    $('.modal').hide();\n  });\n\n  ctx.font = '20px Arial';\n  const game = new Game();\n  new GameView(game, ctx).start();\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/break-hero.js\n// module id = 4\n// module chunks = 0","import MovingObject from './moving_obj.js';\n\nclass Breaker extends MovingObject {\n  constructor(options) {\n    super(options);\n    this.att = options.att;\n    this.color = options.color;\n    this.skill = options.skill;\n    this.NORMAL_TIME = 1000 / 450;\n  }\n\n  upgradeCost() {\n    return this.att * 100;\n  }\n\n  upgrade(pow) {\n    this.att += pow;\n  }\n}\n\nexport default Breaker;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/breaker.js\n// module id = 5\n// module chunks = 0","class LifeBar {\n  constructor() {\n    this.maxLife = 1000;\n    this.currLife = this.maxLife;\n    this.pos = [0, 680];\n  }\n\n  addLife(boost) {\n    this.currLife += boost;\n  }\n\n  loseLife(dmg) {\n    this.currLife -= dmg;\n  }\n\n  drawMax(ctx) {\n    ctx.fillStyle = 'rgb(255, 255, 255)';\n    ctx.beginPath();\n    ctx.rect(this.pos[0], this.pos[1], ctx.canvas.width, 20);\n    ctx.fill();\n    ctx.stroke();\n  }\n\n  drawCurr(ctx) {\n    ctx.fillStyle = 'rgb(238, 218, 85)';\n    ctx.beginPath();\n    let percentage = this.currLife / this.maxLife;\n    ctx.rect(this.pos[0], this.pos[1], Math.floor(percentage * ctx.canvas.width), 20);\n    ctx.fill();\n    ctx.stroke();\n  }\n\n  drawText(ctx) {\n    ctx.fillStyle = 'rgb(0, 0, 0)';\n    ctx.beginPath();\n    ctx.fillText(`${this.currLife} / ${this.maxLife} `, 187, 696.5, 150);\n    ctx.stroke();\n  }\n\n  draw(ctx) {\n    this.drawMax(ctx);\n    this.drawCurr(ctx);\n    this.drawText(ctx);\n  }\n}\n\nexport default LifeBar;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/life_bar.js\n// module id = 6\n// module chunks = 0","import * as Util from './util.js';\n\nclass Monster {\n  constructor(hp, pos) {\n    this.totalHp = hp;\n    this.currHp = hp;\n    this.pos = pos;\n    this.side = Util.defaults.side;\n    this.color = Util.randomColor();\n    this.randomImage();\n  }\n\n  randomImage() {\n    this.image = new Image();\n    let imageNum = Math.floor(Math.random() * 4) + 1;\n    this.image.src = `assets/sprites/monsters/type${imageNum}.png`;\n  }\n\n  moveDown() {\n    this.pos[1] += Util.defaults.side;\n  }\n\n  drawBg(ctx) {\n    ctx.fillStyle = this.color;\n    ctx.beginPath();\n    ctx.rect(this.pos[0], this.pos[1], this.side, this.side);\n    ctx.fill();\n    ctx.stroke();\n  }\n\n  drawHp(ctx) {\n    ctx.fillStyle = 'rgb(255, 255, 255)';\n    ctx.beginPath();\n    let textX;\n    let textY = this.pos[1] + this.side / 1.7;\n\n    switch(true) {\n      case(this.currHp > 999):\n        textX = this.pos[0] + this.side / 4.7;\n        break;\n      case(this.currHp > 99):\n        textX = this.pos[0] + this.side / 3.5;\n        break;\n      case(this.currHp > 9):\n        textX = this.pos[0] + this.side / 2.7;\n        break;\n      default:\n        textX = this.pos[0] + this.side / 2.2;\n        break;\n    }\n\n    ctx.fillText(\n      this.currHp,\n      textX,\n      textY\n    );\n    ctx.stroke();\n  }\n\n  draw(ctx) {\n    this.drawBg(ctx);\n    this.drawHp(ctx);\n  }\n\n  xRange(side) {\n    const leftBound = this.pos[0] + 7;\n    const rightBound = this.pos[0] + side + 7;\n    return [leftBound, rightBound];\n  }\n\n  yRange(side) {\n    const topBound = this.pos[1] + 7;\n    const bottomBound = this.pos[1]+ side + 7;\n    return [topBound, bottomBound];\n  }\n\n  takeHit(att) {\n    this.currHp -= att;\n  }\n\n  collidedBottom(breaker) {\n    let breakPos = breaker.pos;\n    let side = this.side;\n\n    if( (this.yRange(side)[1] < breakPos[1] + 5) && (this.yRange(side)[1] > breakPos[1] - 7) ) {\n      let breakerLeft = breakPos[0];\n      let breakerRight = breakPos[0] + Util.defaults.breakerSide;\n\n      if(Util.inBounds(this.xRange(side), breakerLeft) || Util.inBounds(this.xRange(side), breakerRight)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  collidedTop(breaker) {\n    let breakPos = breaker.pos;\n    let side = this.side;\n\n    if( (this.yRange(side)[0] > breakPos[1] + Util.defaults.breakerSide - 5) && (this.yRange(side)[0] < breakPos[1] + 7 + Util.defaults.breakerSide ) ) {\n      let breakerLeft = breakPos[0];\n      let breakerRight = breakPos[0] + Util.defaults.breakerSide;\n\n      if(Util.inBounds(this.xRange(side), breakerLeft) || Util.inBounds(this.xRange(side),breakerRight)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  collidedRight(breaker) {\n    let breakPos = breaker.pos;\n    let side = this.side;\n\n    if( (this.xRange(side)[1] < breakPos[0] + 5) && (this.xRange(side)[1] > breakPos[0] - 7)) {\n      let breakerTop = breakPos[1];\n      let breakerBot = breakPos[1] + Util.defaults.breakerSide;\n\n      if(Util.inBounds(this.yRange(side), breakerTop) || Util.inBounds(this.yRange(side), breakerBot)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  collidedLeft(breaker) {\n    let breakPos = breaker.pos;\n    let side = this.side;\n\n    if( (this.xRange(side)[0] > breakPos[0] + Util.defaults.breakerSide - 5) && (this.xRange(side)[0] < breakPos[0] + 7 + Util.defaults.breakerSide)) {\n      let breakerTop = breakPos[1];\n      let breakerBot = breakPos[1] + Util.defaults.breakerSide;\n\n      if(Util.inBounds(this.yRange(side), breakerTop) || Util.inBounds(this.yRange(side), breakerBot)) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\nexport default Monster;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/monster.js\n// module id = 7\n// module chunks = 0","import Leader from './leader.js';\nimport { defaults } from './util.js';\n\nclass Pointer {\n  constructor(board) {\n    this.pos = [250, 620];\n    this.setImage();\n    this.imageAngle = 0;\n    this.leaders = [];\n    this.addLeaders();\n    this.board = board;\n  }\n\n  addLeaders() {\n    for (let i = 0; i < 20; i++) {\n      this.leaders.push(new Leader({\n        pos: this.pos,\n        color: 'rgba(212, 212, 212, 0.07)',\n        side: defaults.breakerSide / 3,\n        game: this,\n        board: this.board,\n      }));\n    }\n  }\n\n  setLeaders() {\n    let pos = this.position();\n    let dir = this.calculateDir();\n    pos[0] += 5;\n    this.leaders.forEach((leader, idx) => {\n      leader.assignPos(\n        [pos[0] + ((idx + 1.5) * 30 * dir[0]),\n        pos[1] + ((idx + 1.5) * 30 * dir[1])]\n      );\n    });\n    // this.leaders.assignPos(this.position());\n    // this.leaders.assignDir(this.calculateDir());\n\n  }\n\n  position() {\n    return [this.pos[0] - 9, this.pos[1]];\n  }\n\n  setAngle(pos) {\n    let theta = Math.atan2(pos[0] - this.pos[0], this.pos[1] - pos[1]);\n    this.rotate(theta * 180/Math.PI);\n  }\n\n  setImage() {\n    this.image = new Image();\n    this.image.src = 'assets/sprites/pointer.png';\n  }\n\n  randomPos() {\n    this.pos[0] = Math.floor(Math.random() * (450 - 30)) + 30;\n    this.setLeaders();\n  }\n\n  rotate(val) {\n    if(Math.abs(val) > 80) {\n      switch(val > 0) {\n        case true:\n          this.imageAngle = 80;\n          return;\n        case false:\n          this.imageAngle = -80;\n          return;\n      }\n    } else {\n      this.imageAngle = val;\n    }\n    // setTimeout(this.setLeaders.bind(this), 10);\n    this.setLeaders();\n  }\n\n  angleDir() {\n    return this.imageAngle > 0 ? 1 : -1;\n  }\n\n  calculateDir() {\n    let radians = Math.PI / 180 * Math.abs(this.imageAngle);\n    let x = this.angleDir() * Math.sin(radians);\n    let y = -Math.cos(radians);\n    return [x, y];\n  }\n\n  reset() {\n    this.imageAngle = 0;\n  }\n\n  draw(ctx) {\n    ctx.save();\n    ctx.translate(this.pos[0], this.pos[1]);\n    ctx.rotate(this.imageAngle * TO_RADIANS);\n    ctx.drawImage(this.image, -(this.image.width / 2), -(this.image.height / 2));\n    ctx.restore();\n  }\n}\n\nconst TO_RADIANS = Math.PI / 180;\n\nexport default Pointer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/pointer.js\n// module id = 8\n// module chunks = 0","class GoldHandler {\n  constructor() {\n    this.gold = 0;\n  }\n\n  gold() {\n    return this.gold;\n  }\n\n  updateGold() {\n    $('.current-gold').text(`Gold: ${this.gold}`);\n  }\n\n  addGold(goldEarned) {\n    this.gold += goldEarned;\n    this.updateGold();\n  }\n\n  renderError() {\n    $('.buy-errors').text('Not enough gold');\n    setTimeout(()=> {\n      $('.buy-errors').text('');\n    }, 2000);\n  }\n\n  buy(cost) {\n    if(this.gold >= cost) {\n      this.gold -= cost;\n      this.updateGold();\n      return true;\n    } else {\n      this.renderError();\n      return false;\n    }\n  }\n}\n\nexport default GoldHandler;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/gold_handler.js\n// module id = 9\n// module chunks = 0","import Monster from './monster.js';\nimport * as Util from './util.js';\n\nclass Boss extends Monster {\n  constructor(hp, pos = [Util.defaults.side * 2, 0]) {\n    super(hp * 10, pos);\n    this.side = Util.defaults.side * 2;\n  }\n\n  drawHp(ctx) {\n    ctx.fillStyle = 'rgb(255, 255, 255)';\n    ctx.beginPath();\n    let textX;\n    let textY = this.pos[1] + this.side / 1.9;\n\n    switch(true) {\n      case(this.currHp > 999):\n        textX = this.pos[0] + this.side / 2.8;\n        break;\n      case(this.currHp > 99):\n        textX = this.pos[0] + this.side / 2.5;\n        break;\n      case(this.currHp > 9):\n        textX = this.pos[0] + this.side / 2.3;\n        break;\n      default:\n        textX = this.pos[0] + this.side / 2;\n        break;\n    }\n\n    ctx.fillText(\n      this.currHp,\n      textX,\n      textY\n    );\n    ctx.stroke();\n  }\n}\n\nexport default Boss;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/boss.js\n// module id = 10\n// module chunks = 0","class MovingObject {\n  constructor(options) {\n    this.pos = options.pos;\n    this.vel = options.vel || [0,0];\n    this.game = options.game;\n    this.side = options.side;\n  }\n\n  assignDir(vel) {\n    this.vel = vel;\n  }\n\n  assignPos(pos) {\n    this.pos = pos;\n  }\n\n  updateVel(bot, top, right, left) {\n    if(bot) {\n      this.vel[1] *= -1;\n    }\n\n    if(top) {\n      this.vel[1] *= -1;\n    }\n\n    if(right) {\n      this.vel[0] *= -1;\n    }\n\n    if(left) {\n      this.vel[0] *= -1;\n    }\n  }\n\n  draw(ctx) {\n    ctx.fillStyle = this.color;\n    ctx.beginPath();\n    ctx.arc(this.pos[0] + this.side / 2, this.pos[1] + this.side / 2, this.side / 2, 0, 2 * Math.PI);\n    ctx.fill();\n    ctx.stroke();\n  }\n\n  move(timeDelta) {\n    const velocityScale = timeDelta / this.NORMAL_TIME;\n    this.pos = [this.pos[0] + this.vel[0] * velocityScale, this.pos[1] + this.vel[1] * velocityScale];\n\n    if(this.game.attackOver(this.pos)) {\n      this.remove();\n    }\n  }\n\n  remove() {\n    this.game.remove(this);\n  }\n}\n\nexport default MovingObject;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/moving_obj.js\n// module id = 12\n// module chunks = 0","import MovingObject from './moving_obj.js';\n\nclass Leader extends MovingObject {\n  constructor(options) {\n    super(options);\n    this.color = options.color;\n    this.NORMAL_TIME = 1000 / 2000;\n    this.board = options.board;\n  }\n\n}\n\nexport default Leader;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/leader.js\n// module id = 13\n// module chunks = 0"],"sourceRoot":""}