{"version":3,"sources":["webpack:///webpack/bootstrap 71d168eee56ec65cb11f","webpack:///./lib/util.js","webpack:///./lib/game.js","webpack:///./lib/game_view.js","webpack:///./lib/board.js","webpack:///./lib/break-hero.js","webpack:///./lib/breaker.js","webpack:///./lib/life_bar.js","webpack:///./lib/monster.js","webpack:///./lib/pointer.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;AChEA;AACA;AACA;AACA;AACA,CAAC;AAAA;AAAA;;AAED;AACA;;AAEA;AACA,iBAAiB,OAAO;AACxB;AACA;;AAEA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AAAA;AAAA;;;;;;;;;;;;;ACxCA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;ACnKA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;ACrBA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;;AAEA;;AAEA;;;;;;;;;;;AC7FA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;ACVD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;;AC9DA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB,cAAc,KAAK,aAAa;AACpD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;AC9CA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oDAAoD,SAAS;AAC7D;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACvIA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 71d168eee56ec65cb11f","export const defaults = ({\n  side: 80,\n  breakerSide: 80 / 2.7,\n  speed: 4,\n});\n\nexport const randomColor = () => {\n  const hexDigits = '0123456789ABCDEF';\n\n  let color = \"#\";\n  for (let i = 0; i < 3; i++) {\n    color += hexDigits[Math.floor(Math.random() * 16)];\n  }\n\n  return color;\n};\n\nexport const inBounds = (range, val) => {\n  return (range[0] < val && range[1] > val);\n};\n\nexport const keyBinds = (game) => {\n  return (e) => {\n    if(e.keyCode == '32') {\n      game.runTurn();\n      unBindKeyHandlers(game);\n    } else if (e.keyCode == '37') {\n      game.pointer.rotate(-4);\n    } else if (e.keyCode == '39') {\n      game.pointer.rotate(4);\n    }\n  };\n};\n\nexport const bindKeyHandlers = (game) => {\n  $(document).on('keydown', keyBinds(game));\n};\n\nexport const unBindKeyHandlers = (game) => {\n  $(document).off('keydown');\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/util.js\n// module id = 0\n// module chunks = 0","import Breaker from './breaker.js';\nimport Board from './board.js';\nimport LifeBar from './life_bar.js';\nimport Pointer from './pointer.js';\nimport * as Util from './util.js';\n\nclass Game {\n  constructor() {\n    this.breakers = [];\n    this.currentAttackers = [];\n    this.board = new Board(this);\n    this.startPos = [800, 800];\n    this.DIM_X = 480;\n    this.DIM_Y = 700;\n    this.lifeBar = new LifeBar();\n    this.pointer = new Pointer();\n    this.initialSetup();\n  }\n\n  initialSetup() {\n    this.addBreaker();\n    this.addBreaker();\n    this.addBreaker();\n    this.board.addRow();\n  }\n\n  addBreaker() {\n    const breaker = new Breaker({\n      att: 40,\n      pos: this.startPos,\n      color: '#cb1414',\n      side: Util.defaults.breakerSide,\n      skill: [],\n      game: this,\n    });\n\n    this.breakers.push(breaker);\n  }\n\n  allObjects() {\n    return [].concat(this.board.allMonsters(), this.currentAttackers, this.lifeBar, this.pointer);\n  }\n\n  draw(ctx) {\n    ctx.clearRect(0, 0, this.DIM_X, this.DIM_Y);\n    this.allObjects().forEach((obj) => {\n      obj.draw(ctx);\n    });\n  }\n\n  moveObjects() {\n    this.currentAttackers.forEach( breaker => {\n      breaker.move();\n    });\n  }\n\n  step() {\n    this.moveObjects();\n    this.checkCollisions();\n  }\n\n  checkCollisions() {\n    this.currentAttackers.forEach(breaker => {\n      let hitBot = false;\n      let hitTop = false;\n      let hitRight = false;\n      let hitLeft = false;\n\n      this.board.allMonsters().forEach(mons => {\n          if((breaker.vel[1] < 0) && mons.collidedBottom(breaker)) {\n            hitBot = true;\n            mons.takeHit(breaker.att);\n          }\n\n          if((breaker.vel[1] > 0) && mons.collidedTop(breaker)) {\n            hitTop = true;\n            mons.takeHit(breaker.att);\n          }\n\n          if((breaker.vel[0] < 0 && mons.collidedRight(breaker))) {\n            hitRight = true;\n            mons.takeHit(breaker.att);\n          }\n\n          if((breaker.vel[0] > 0 && mons.collidedLeft(breaker))) {\n            hitLeft = true;\n            mons.takeHit(breaker.att);\n          }\n      });\n\n      //collision canvas\n      if(breaker.pos[0] < 0) {\n        hitLeft = true;\n      }\n\n      if(breaker.pos[0] > this.DIM_X - Util.defaults.breakerSide) {\n        hitRight = true;\n      }\n\n      if(breaker.pos[1] < 0) {\n        hitTop = true;\n      }\n\n      breaker.updateVel(hitBot, hitTop, hitRight, hitLeft);\n      hitBot = hitTop = hitRight = hitLeft = false;\n      this.board.updateMons();\n    });\n  }\n\n  attackOver(pos) {\n    return pos[1] > 700;\n  }\n\n  runTurn() {\n    Object.assign(this.currentAttackers, this.breakers);\n    let vel = this.pointer.calculateDir();\n    let startPos = this.pointer.position();\n    let interval = 0;\n    this.currentAttackers.forEach(breaker => {\n      setTimeout(() => {\n        breaker.assignDir(Object.assign([], vel));\n        breaker.assignPos(Object.assign([], startPos));\n      }, interval);\n      interval += 200;\n    });\n  }\n\n  takeDamage(row) {\n    row.forEach(mons => {\n      this.lifeBar.loseLife(mons.currHp / 10);\n    });\n  }\n\n  turnOver() {\n    this.board.addRow();\n    this.board.takeDamage();\n    Util.bindKeyHandlers(this);\n    this.resetBreakers();\n    this.pointer.reset();\n    this.pointer.randomPos();\n  }\n\n  resetBreakers() {\n    this.breakers.forEach(breaker => {\n      breaker.assignPos(Game.RESTPOS);\n      breaker.assignDir(Game.RESTVEL);\n    });\n  }\n\n  remove(object) {\n    if(object instanceof Breaker) {\n      this.currentAttackers.splice(this.currentAttackers.indexOf(object), 1);\n    }\n\n    if(this.currentAttackers.length === 0) {\n      this.turnOver();\n    }\n  }\n}\n\nGame.RESTPOS = [240, 600];\nGame.RESTVEL = [0, 0];\n\nexport default Game;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/game.js\n// module id = 1\n// module chunks = 0","import * as Util from './util.js';\n\nclass GameView {\n  constructor(game, ctx) {\n    this.ctx = ctx;\n    this.game = game;\n  }\n\n  start() {\n    Util.bindKeyHandlers(this.game);\n    // this.lastTime = 0;\n    requestAnimationFrame(this.animate.bind(this));\n  }\n\n  animate() {\n    this.game.step();\n    this.game.draw(this.ctx);\n    requestAnimationFrame(this.animate.bind(this));\n  }\n}\n\nexport default GameView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/game_view.js\n// module id = 2\n// module chunks = 0","import Monster from './monster.js';\nimport * as Util from './util.js';\n\nclass Board {\n  constructor(game) {\n    this.monsterRows = [];\n    this.level = 0;\n    this.game = game;\n    this.max_monster_count = 6;\n  }\n\n  moveDown() {\n    this.monsterRows.forEach( (row) => {\n      row.forEach( (monster) => monster.moveDown());\n    });\n  }\n\n  takeDamage() {\n    let toRemove;\n    this.monsterRows.forEach((row, idx) => {\n      row.forEach((monster) => {\n        if(monster.pos[1] >= 560) {\n          toRemove = idx;\n        }\n      });\n    });\n\n    if(toRemove) {\n      this.game.takeDamage(this.monsterRows[toRemove]);\n      this.monsterRows.splice(toRemove, 1);\n    }\n  }\n\n  assignMultiplier() {\n    return Math.random() > 0.95 ? 1 : 100;\n  }\n\n  addRow() {\n    let pos = [0, 0];\n    const newRow = [];\n    this.moveDown();\n    this.monsterRows.push(this.spawn(this.max_monster_count, pos, newRow));\n    this.level += 1;\n  }\n\n  spawn(num, pos, newRow) {\n    if(num > 0) {\n      if(Math.random() > .7) {\n        let multiplier = this.assignMultiplier() || 2;\n        let special = 0;\n        if(Math.random() > .9) {\n          special = 1;\n        }\n        newRow.push( new Monster(\n          (100 + this.level * multiplier),\n          Object.assign([],pos),\n          special)\n        );\n      }\n      pos[0] += Util.defaults.side;\n      return this.spawn((num - 1), pos, newRow);\n    }\n\n    return newRow;\n  }\n\n  allMonsters() {\n    let allSters = [];\n    this.monsterRows.forEach((row) => {\n      allSters = allSters.concat(row);\n    });\n\n    return allSters;\n  }\n\n  updateMons() {\n    this.monsterRows.forEach((row) => {\n      let rowCopy = Object.assign([], row);\n      rowCopy.forEach((mons, idx) => {\n        if(mons.currHp <= 0) {\n          if(mons.special === 1) {\n            this.game.addBreaker();\n          }\n          row.splice(idx, 1);\n        }\n      });\n    });\n  }\n\n}\n\nconst MAX_MONSTER_COUNT = 6;\n\nexport default Board;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/board.js\n// module id = 3\n// module chunks = 0","import Game from './game.js';\nimport GameView from './game_view.js';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const canvasEl = document.getElementById('canvas');\n  const ctx = canvasEl.getContext('2d');\n  ctx.font = '20px Arial';\n  const game = new Game();\n  debugger\n  new GameView(game, ctx).start();\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/break-hero.js\n// module id = 4\n// module chunks = 0","class Breaker {\n  constructor(options) {\n    this.att = options.att;\n    this.pos = options.pos;\n    this.vel = options.vel || [0, 0];\n    this.color = options.color;\n    this.game = options.game;\n    this.side = options.side;\n    this.skill = options.skill;\n  }\n\n  assignDir(vel) {\n    this.vel = vel;\n  }\n\n  assignPos(pos) {\n    this.pos = pos;\n  }\n\n  updateVel(bot, top, right, left) {\n    if(bot) {\n      this.vel[1] *= -1;\n    }\n\n    if(top) {\n      this.vel[1] *= -1;\n    }\n\n    if(right) {\n      this.vel[0] *= -1;\n    }\n\n    if(left) {\n      this.vel[0] *= -1;\n    }\n  }\n\n  draw(ctx) {\n    ctx.fillStyle = this.color;\n    ctx.beginPath();\n    ctx.arc(this.pos[0] + this.side / 2, this.pos[1] + this.side / 2, this.side / 2, 0, 2 * Math.PI);\n    ctx.fill();\n    ctx.stroke();\n  }\n\n  upgrade(pow) {\n    this.att += pow;\n  }\n\n  move(multiplier = 1) {\n    this.pos = [this.pos[0] + this.vel[0] * 2.5 * multiplier, this.pos[1] + this.vel[1] * 2.5 * multiplier];\n\n    if(this.game.attackOver(this.pos)) {\n      this.remove();\n    }\n  }\n\n  remove() {\n    this.game.remove(this);\n  }\n}\n\nexport default Breaker;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/breaker.js\n// module id = 5\n// module chunks = 0","class LifeBar {\n  constructor() {\n    this.maxLife = 1000;\n    this.currLife = this.maxLife;\n    this.pos = [0, 680];\n  }\n\n  addLife(boost) {\n    this.currLife += boost;\n  }\n\n  loseLife(dmg) {\n    this.currLife -= dmg;\n  }\n\n  drawMax(ctx) {\n    ctx.fillStyle = 'rgb(255, 255, 255)';\n    ctx.beginPath();\n    ctx.rect(this.pos[0], this.pos[1], ctx.canvas.width, 20);\n    ctx.fill();\n    ctx.stroke();\n  }\n\n  drawCurr(ctx) {\n    ctx.fillStyle = 'rgb(238, 218, 85)';\n    ctx.beginPath();\n    let percentage = this.currLife / this.maxLife;\n    ctx.rect(this.pos[0], this.pos[1], percentage * ctx.canvas.width, 20);\n    ctx.fill();\n    ctx.stroke();\n  }\n\n  drawText(ctx) {\n    ctx.fillStyle = 'rgb(0, 0, 0)';\n    ctx.beginPath();\n    ctx.fillText(`${this.currLife} / ${this.maxLife} `, 195, 696.5, 150);\n    ctx.stroke();\n  }\n\n  draw(ctx) {\n    this.drawMax(ctx);\n    this.drawCurr(ctx);\n    this.drawText(ctx);\n  }\n}\n\nexport default LifeBar;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/life_bar.js\n// module id = 6\n// module chunks = 0","import * as Util from './util.js';\n\nclass Monster {\n  constructor(hp, pos) {\n    this.totalHp = hp;\n    this.currHp = hp;\n    this.pos = pos;\n    this.side = Util.defaults.side;\n    this.color = Util.randomColor();\n    this.randomImage();\n  }\n\n  randomImage() {\n    this.image = new Image();\n    let imageNum = Math.floor(Math.random() * 4) + 1;\n    this.image.src = `assets/sprites/monsters/type${imageNum}.png`;\n  }\n\n  moveDown() {\n    this.pos[1] += Util.defaults.side;\n  }\n\n  drawBg(ctx) {\n    // ctx.drawImage(this.image, this.pos[0] - 15, this.pos[1] - 15, Util.defaults.side + 40, Util.defaults.side + 40);\n    ctx.fillStyle = this.color;\n    ctx.beginPath();\n    ctx.rect(this.pos[0], this.pos[1], this.side, this.side);\n    ctx.fill();\n    ctx.stroke();\n  }\n\n  drawHp(ctx) {\n    ctx.fillStyle = 'rgb(255, 255, 255)';\n    ctx.beginPath();\n    let textX;\n    let textY = this.pos[1] + this.side / 1.7;\n\n    switch(true) {\n      case(this.currHp > 999):\n        textX = this.pos[0] + this.side / 4.7;\n        break;\n      case(this.currHp > 99):\n        textX = this.pos[0] + this.side / 3.5;\n        break;\n      case(this.currHp > 9):\n        textX = this.pos[0] + this.side / 2.7;\n        break;\n      default:\n        textX = this.pos[0] + this.side / 2.2;\n        break;\n    }\n\n    ctx.fillText(\n      this.currHp,\n      textX,\n      textY\n    );\n    ctx.stroke();\n  }\n\n  draw(ctx) {\n    this.drawBg(ctx);\n    this.drawHp(ctx);\n  }\n\n  xRange() {\n    const leftBound = this.pos[0];\n    const rightBound = this.pos[0] + Util.defaults.side;\n    return [leftBound, rightBound];\n  }\n\n  yRange() {\n    const topBound = this.pos[1];\n    const bottomBound = this.pos[1]+ Util.defaults.side;\n    return [topBound, bottomBound];\n  }\n\n  takeHit(att) {\n    this.currHp -= att;\n  }\n\n  collidedBottom(breaker) {\n    let breakPos = breaker.pos;\n\n    if( (this.yRange()[1] < breakPos[1]) && (this.yRange()[1] > breakPos[1] - 8) ) {\n      let breakerLeft = breakPos[0];\n      let breakerRight = breakPos[0] + Util.defaults.breakerSide;\n\n      if(Util.inBounds(this.xRange(), breakerLeft) || Util.inBounds(this.xRange(), breakerRight)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  collidedTop(breaker) {\n    let breakPos = breaker.pos;\n    if( (this.yRange()[0] > breakPos[1] + Util.defaults.breakerSide) && (this.yRange()[0] < breakPos[1] + 8 + Util.defaults.breakerSide ) ) {\n      let breakerLeft = breakPos[0];\n      let breakerRight = breakPos[0] + Util.defaults.breakerSide;\n\n      if(Util.inBounds(this.xRange(), breakerLeft) || Util.inBounds(this.xRange(),breakerRight)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  collidedRight(breaker) {\n    let breakPos = breaker.pos;\n    if( (this.xRange()[1] < breakPos[0]) && (this.xRange()[1] > breakPos[0] - 8)) {\n      let breakerTop = breakPos[1];\n      let breakerBot = breakPos[1] + Util.defaults.breakerSide;\n\n      if(Util.inBounds(this.yRange(), breakerTop) || Util.inBounds(this.yRange(), breakerBot)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  collidedLeft(breaker) {\n    let breakPos = breaker.pos;\n    if( (this.xRange()[0] > breakPos[0] + Util.defaults.breakerSide) && (this.xRange()[0] < breakPos[0] + 8 + Util.defaults.breakerSide)) {\n      let breakerTop = breakPos[1];\n      let breakerBot = breakPos[1] + Util.defaults.breakerSide;\n\n      if(Util.inBounds(this.yRange(), breakerTop) || Util.inBounds(this.yRange(), breakerBot)) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\nexport default Monster;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/monster.js\n// module id = 7\n// module chunks = 0","class Pointer {\n  constructor() {\n    this.pos = [250, 620];\n    this.setImage();\n    this.imageAngle = 0;\n  }\n\n  position() {\n    return [this.pos[0] - 15, this.pos[1]];\n  }\n\n  setImage() {\n    this.image = new Image();\n    this.image.src = 'assets/sprites/pointer.png';\n  }\n\n  randomPos() {\n    this.pos[0] = Math.floor(Math.random() * (450 - 30)) + 30;\n  }\n\n  rotate(val) {\n    Math.abs(this.imageAngle + val) < 80 ? this.imageAngle += val : this.imageAngle;\n  }\n\n  angleDir() {\n    return this.imageAngle > 0 ? 1 : -1;\n  }\n\n  calculateDir() {\n    let radians = Math.PI / 180 * Math.abs(this.imageAngle);\n    let x = this.angleDir() * Math.sin(radians);\n    let y = -Math.cos(radians);\n    return [x * 3, y * 3];\n  }\n\n  reset() {\n    this.imageAngle = 0;\n  }\n\n  draw(ctx) {\n    ctx.save();\n    ctx.translate(this.pos[0], this.pos[1]);\n    ctx.rotate(this.imageAngle * TO_RADIANS);\n    ctx.drawImage(this.image, -(this.image.width / 2), -(this.image.height / 2));\n    ctx.restore();\n  }\n}\n\nconst TO_RADIANS = Math.PI / 180;\n\nexport default Pointer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/pointer.js\n// module id = 8\n// module chunks = 0"],"sourceRoot":""}